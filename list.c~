#include <stdio.h>
#include <sys/types.h>

#include <libusb.h>

static void
print_devs(libusb_device **devs)
{
	libusb_device *dev;
	libusb_device_handle *hand;
	int i = 0;
		struct libusb_device_descriptor desc;	
	while((dev=devs[i++]) != NULL){

		int r = libusb_get_device_descriptor(dev, &desc);
		if(r < 0){
			fprintf(stderr, "failed to get device descriptor");
			return;
		}

		printf("%x:%x (bus %d, device %d, speed %d)\n",
			desc.idVendor, desc.idProduct,
		       libusb_get_bus_number(dev), libusb_get_device_address(dev),
		       libusb_get_device_speed(dev));
		}

	hand = libusb_open_device_with_vid_pid(NULL, desc.idVendor, desc.idProduct);
	int j = libusb_kernel_driver_active(hand,0);
	printf("%d\n",j);
	int k = libusb_reset_device(hand);
	printf("%d\n", k);
int o = libusb_claim_interface(hand, 1);
	printf("%d\n", o);
	int m = libusb_get_device_descriptor(hand,desc);
}

int
main(void)
{
	libusb_device **devs;
	int r;
	ssize_t cnt;
	
	r = libusb_init(NULL);
	if(r < 0)
		return r;

	cnt = libusb_get_device_list(NULL, &devs);
	if(cnt < 0)
		return(int) cnt;

	print_devs(devs);
	libusb_free_device_list(devs, 1);
	
	libusb_exit(NULL);
	return 0;
}

